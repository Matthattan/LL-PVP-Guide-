{"version":3,"file":"js/784.64b4d7e1.js","mappings":"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","sources":["webpack://test/./src/components/ContentList.vue","webpack://test/./src/components/ContentList.vue?f4ac","webpack://test/./src/views/SetMakingPage.vue","webpack://test/./src/components/AppSetMaking.vue","webpack://test/./src/components/SetExamples.vue","webpack://test/./src/components/SetExamples.vue?079a","webpack://test/./src/components/AppSetMaking.vue?fc92","webpack://test/./src/views/SetMakingPage.vue?f9e9"],"sourcesContent":["<template>\r\n    <button type=\"button\" @click=\"togglecontentList\" id=\"contentlistButton\" class=\"content\"></button>\r\n    <div class=\"Clist\" :class=\"{ 'show': showcontentList}\">Content List\r\n        <!--List of all contents via IDs-->\r\n        <ol>\r\n            <li v-for=\"(item, index) in content\" :key=\"index\">\r\n                <a :href=\"'#' + item.id\">{{ item.title }}</a>\r\n                <ol v-if=\"item.subitems && item.subitems.length\">\r\n                    <!-- Sub-Content -->\r\n                    <li v-for=\"(subitem, subIndex) in item.subitems\" :key=\"subIndex\">\r\n                        <a :href=\"'#' + subitem.id\">{{ subitem.title }}</a>\r\n                    </li>\r\n                </ol>\r\n            </li>\r\n        </ol>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"ContentList\",\r\n    data() {\r\n        return {\r\n            showcontentList: false\r\n        }\r\n    },\r\n    props: {\r\n        content: Array\r\n    },\r\n    methods: {\r\n        togglecontentList() {\r\n            this.showcontentList = !this.showcontentList;\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    .Clist {\r\n        background-color: rgb(87, 190, 204);\r\n        border-radius: 25px;\r\n        padding: 10px 5px;\r\n        min-height: 100px;\r\n        position: fixed;\r\n        bottom: 20px;\r\n        left: -100%; /* Initially hidden */\r\n        transition: left 0.5s ease;\r\n        z-index: 2;\r\n        width: 280px;\r\n        min-width: 260px;\r\n    }\r\n\r\n    .Clist li :hover {\r\n        color: aqua;\r\n    }\r\n\r\n    .Clist.show {\r\n        position: fixed;\r\n        left: 10px;\r\n    }\r\n\r\n    #contentlistButton {\r\n        left: 20px;\r\n        padding: 20px;\r\n        transition: margin-left 0.7s ease; /* Smooth transition for content */\r\n        margin-left: 0; /* Initially aligned with the viewport */\r\n        position: fixed;\r\n        top: 5rem;\r\n        z-index: 1;\r\n        background-image: url('../assets/images/contentList/list-15-512.png');\r\n        background-repeat: no-repeat;\r\n        background-position: 50% 50%;\r\n        background-color: transparent;\r\n        background-size: contain;\r\n        border: none;\r\n        height: 4rem;\r\n        width: 4rem;\r\n    }\r\n</style>\r\n","import { render } from \"./ContentList.vue?vue&type=template&id=376032e6&scoped=true\"\nimport script from \"./ContentList.vue?vue&type=script&lang=js\"\nexport * from \"./ContentList.vue?vue&type=script&lang=js\"\n\nimport \"./ContentList.vue?vue&type=style&index=0&id=376032e6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376032e6\"]])\n\nexport default __exports__","<template>\n  <div class=\"home\">\n    <AppSetMaking/>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport AppSetMaking from '@/components/AppSetMaking.vue';\n\nexport default {\n  name: 'SetMakingPage',\n  components: {\n    AppSetMaking  \n  }\n}\n</script>\n","<template>\r\n    <ImageHeader :imageUrl=\"imageUrl\" pageName=\"Set Making\"/>\r\n    <SideBar/>\r\n    <main>\r\n        <ContentList id=\"Questions\" :content=\"contentData\"/>\r\n        <h1 id=\"What_is_a_Set\">What is a Set?</h1>\r\n        <p>A set is a specific composure of TP’s, Personalities and items. \r\n            The way your Loomian plays and performs in battle will depend on what set you’re using. \r\n        </p>\r\n        <h1 id=\"Where_can_I_make_Sets\">Where can I make Sets?</h1>\r\n        <p>Many programs available online for making sets have been listed in Resources however there are many more on the internet.</p>\r\n        <h1>Why should I make Sets?</h1>\r\n        <p>By analyzing a Loomian’s capabilities, you can choose where to put Training Points, \r\n            select the optimal personality for the role intended, decide on a specialized movement set and much more. \r\n            This can give you an edge in certain match-ups and surprise your opponent by running something unexpected. \r\n            Of course, not all unconventional sets will perform to the same viability so make sure your reason for running a set is greatly justified. \r\n        </p>\r\n        <h1 id=\"How_do_I_make_a_Set\">How do I make a Set?</h1>\r\n        <p>Though there aren’t set rules when choosing how to run a Loomian, there are some suggested guidelines: </p>\r\n        <ul>\r\n            <li>Base your set around level 50. \r\n                The standard for competitive battles is level 50, \r\n                this means 8 Training Points (or 4 if they’re in Energy) and 2 Unique Points are equal to 1 total stat point. \r\n            </li>\r\n            <li>Try not to force a Loomian to take on multiple roles. Though it's important that your team gets the utility it needs to perform well,\r\n                You may end up stretching its entire arsenal utilities so thin that it can’t perform any of its roles well. \r\n                Instead, try to focus on a singular role. \r\n            </li>\r\n            <li> Create purposeful sets by justifying your investments; consider a Loomian's base stats and movepool. \r\n                Avoid vague reasoning like \"to tank hits.\" \r\n                You can use the damage calculator to simulate matchups, ensuring optimal point investment for survival, outspeeding, or achieving knockouts. \r\n            </li>\r\n            <li>Understand how a role affects Training Points, Personalities, Item, Moveset etc. \r\n                An offensive role such as a Cleaner is likely to invest a lot into its dominant attacking stat and speed however a Wall would prefer maximizing its health and defenses. \r\n                Many Loomians have explicitly high stats which make it easier to understand how it can be used within the competitive scene. \r\n            </li>\r\n            <li> Analyze the meta - by understanding which Loomians are being used the most and others which are not seeing usage, \r\n                you can evaluate if your choices for set making are valid. \r\n                If you were in a meta with lots of offensive water types, would making a defensive set for a fire type be worth it? \r\n            </li>\r\n            <li>Test your sets out - simulators are pretty powerful tools however they can’t substitute the real thing. \r\n                There may be a matchup you forgot to check or an investment simply wasn’t worth it. \r\n                By using sets in actual battles, it can prove more useful or, if not, show what can be improved. \r\n            </li>\r\n        </ul>\r\n        <SetExamples/>\r\n    </main>\r\n</template>\r\n<script>\r\nimport SideBar from './SideBar.vue';\r\nimport ImageHeader from './Header.vue';\r\nimport ContentList from './ContentList.vue';\r\nimport SetExamples from './SetExamples.vue';\r\n\r\nexport default {\r\n    name: 'AppSetMaking',\r\n    components: {\r\n        ImageHeader,\r\n        SideBar,\r\n        ContentList,\r\n        SetExamples\r\n    },\r\n    data() {\r\n        return {\r\n            imageUrl: require(\"@/assets/images/headers/Route_5.webp\"),\r\n            contentData: [\r\n                {\r\n                    id: 'What_is_a_Set',\r\n                    title: 'What is a Set?',\r\n                },\r\n                {\r\n                    id: 'Where_can_I_make_Sets',\r\n                    title: 'Where can I make Sets?',\r\n                },\r\n                {\r\n                    id: 'How_do_I_make_a_Set',\r\n                    title: 'How do I make a set?',\r\n                },\r\n                {\r\n                    id: 'Set_Examples',\r\n                    title: 'Set Examples',\r\n                    subitems: [\r\n                        {id: `Set_Examples`, title: `Offensive Set - Example 1`},\r\n                        {id: `Set_Examples`, title: `Offensive Set - Example 2`},\r\n                        {id: `Set_Examples`, title: `Defensive Set - Example 1`},\r\n                        {id: `Set_Examples`, title: `Defensive Set - Example 2`},\r\n                    ]\r\n                },\r\n            ]\r\n        }\r\n    }\r\n}\r\n</script>","<template>\r\n    <h1 id=\"Set_Examples\">Set Examples</h1>\r\n    <p>Here are some basic explanations of both an offensive and defensive set to show just how easy it is to create basic Loomian PVP Sets:</p>\r\n    <div class=\"box\">\r\n        <div class=\"selection\">\r\n            <button v-for=\"(Rally, Index) in Items\" \r\n            :key=\"Index\" \r\n            @click=\"SwitchTabs(Rally.Name)\">\r\n            {{ Rally.Name }}\r\n        </button>\r\n        </div>\r\n        <div class=\"description\"\r\n        :style=\"{ display: Rally.Name === Items[0].Name ? 'block' : 'none' }\"\r\n        v-for=\"(Rally, Index) in Items\" \r\n        :key=\"Index\" \r\n        :id=\"Rally.Name\">\r\n            <h2>{{ Rally.Name }}</h2>\r\n            <template v-for=\"(Text, Index) in Rally.Description\" :key=\"Index\">\r\n                <template v-if=\"isImagePath(Text)\">\r\n                    <img class=\"image\" :src=\"Text\">\r\n                    <br>\r\n                </template>\r\n                <template v-else-if=\"Text == '<br>'\">\r\n                    <br>\r\n                </template>\r\n                <template v-else>\r\n                    <p>{{ Text }}</p>\r\n                </template>\r\n            </template>   \r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'SetExamples',\r\n        data() {\r\n            return {\r\n                Items: [\r\n                    {\r\n                    Name: \"Offensive Set - Example 1\", \r\n                    Description: [                        \r\n                        `Among all the Beginner Loomians, Zuelong stands as one of the most popular. It always has had a strong presence as a revenge killer or late game cleaner, despite having answers coming and going, but still sees sufficient usage and viability - nonetheless.`,\r\n                        `One of the main reasons Zuelong has such great offensive utility is because of its base stats being sufficient to do so. Zuelong features an impressive base speed stat of 119 making it one of the fastest Loomians without the need of a boost. Furthermore, it has a satisfactory Ranged Attack stat at 106. Its energy stat sits at 88 allowing it to reach a reasonable benchmark so it can fire off enough moves. Despite Zuelong being known for being a ranged attacker, it does have a somewhat usable Melee Attack stat of 89 that can catch common Zuelong answers off guard however for this demonstration it won’t be focused on.`,\r\n                        require(\"@/assets/images/setMaking/OffensiveSet1/BaseStats.png\"),\r\n                        `Despite it being an offensive loomian, with less than decent defensive stats, It does have a major resistance to electric and 4 resistances. On the other hand, it does have 3 weaknesses being light, earth and ancient.`,\r\n                        `However, it is the offensive effectiveness that most people are interested in. Taking in account its relevant ranged attacks, it can hit a broad selection of Loomians for at least neutral effectiveness.`,\r\n                        require(\"@/assets/images/setMaking/OffensiveSet1/TypeEffectiveness.png\"),\r\n                        `Despite having a great base speed stat, the meta is only becoming faster with it seeing Loomians faster than ever with boots, moves and abilities. For this reason, it’s recommended to run Nimble, enabling it to outspeed offensive threats like Hunder, Jetwing Stratusoar and Nevermare.`,\r\n                        `Additionally, Zuelong appreciates having some damage increase given its output would be lacklustre without it. For this reason, it can run Smart too. As for its negative personality, Very Frail is more than enough given it won’t run melee moves.`,\r\n                        `Awakening is a great ability boosting Zuelong’s type-sharing moves by an additional 25% however Brute Force is marginally better, granted it removes secondary effects such as a potential burn from Elemental Burst. Despite this, being able to knock out opponents is better than the probability of inflicting an ailment.`,\r\n                        require(\"@/assets/images/setMaking/OffensiveSet1/BruteForce.png\"),\r\n                        `For a considerable amount of time, Zuelong didn’t necessarily have a full moveset to run, but it now has quite a few options. The main three moves it should have is Thunderstrike, Elemental Burst and Fire Breath however its last move can be Ancient Roar - to pivot on Loomians it doesn’t like staying on whilst decreasing their offensive presence; Zip-Zap - acting as an alternative pivot move that deals marginal damage and Jolt enabling Zuelong to jump priority to finish off Loomians that may be faster otherwise.`,\r\n                        require(\"@/assets/images/setMaking/OffensiveSet1/Moveset.png\"),\r\n                        `Zuelong sports a simple TP spread: 200 points in both its Speed and RAtk for maximum speed and damage output, respectively; 20 points in Energy, allowing it to reach 250 and use any of its three main attacks five times; and 80 points in Health as leftovers.`,\r\n                        require(\"@/assets/images/setMaking/OffensiveSet1/TrainingPoints.png\"),\r\n                        `Usually an Essence of your preference can be used on Zuelong however some players may opt for Specialty Boots so it can comfortably act as a revenge killer without another Boots Loomian outspeeding it. This does come with a disadvantage of being locked into a move so choose wisely.`,\r\n                    ]},\r\n                    {\r\n                    Name: \"Offensive Set - Example 2\", \r\n                    Description: [\r\n                        `At first glance, Hunder’s stats don’t seem special apart from its great speed of 116 which still holds potential in the current meta. Its Melee Attack sits at 94 while its Ranged attack is 43. Both of its defences are not exactly abundant with its Melee Defence and Ranged Defence being 83 and 69 respectively. This isn’t a huge hindrance considering Hunder is used offensively (and has the speed to avoid being outsped). Hunder’s energy is 84 which allows it to feasibly reach the 250 benchmark. Finally its Health is 78 which is quite “middle in the pack” however this isn’t a big matter.`,\r\n                        require(\"@/assets/images/setMaking/OffensiveSet2/BaseStats.png\"),\r\n                        `Hunder is a Metal (like most Sepharite City Loomians) and Electric type which means it has a quad weakness to Earth and a normal weakness to Fire, Water and Brawler. However, quite unexpectedly, it does possess some resistances such as Ice, Bug, Ancient and Mind. It also has 2 major resistances being Metal and Air.`,\r\n                        require(\"@/assets/images/setMaking/OffensiveSet2/TypeEffectiveness.png\"),\r\n                        `Offensively, on the contrary, taking into account its relevant moves, Hunder can hit nearly every Loomian for at least neutral save for a couple of fire types.`,\r\n                        `Given Hunder is a Melee Attacker, it makes sense to use the positive personality Brawny. However, despite its already great speed stat, it does sit between other Loomians who would want to outspeed Hunder who either have the same speed stat or are only slightly below. For this reason, its highly recommended to run Nimble`,\r\n                        `As for the negative ability, Very Clumsy will be used due to its uselessness.`,\r\n                        `Hunder’s Melee Attack is decent for the most part however it can be improved so an ability that increases damage output would be greatly helpful. Brute Force does increase damage output by 30% at the cost of secondary effects but Power Jaw takes this a step further by increasing damage by 50% for all biting moves. For this reason, and also because a lot of Hunder’s best moves are biting-based, we will use Power Jaw.`,\r\n                        require(\"@/assets/images/setMaking/OffensiveSet2/PowerJaw.png\"),\r\n                        `As mentioned previously, Hunder has a lot of biting moves such as Blaze Chomp, Vice Jaws, Thunder Chomp etc. The specific combination we’ll choose is Vice Jaws, Thunder Chomp, Chilly Chomp and Blaze Chomp.`,\r\n                        `Vice Jaws prevents the target from using the same move for more than two moves and acts as one of Hunder’s ATB moves. Thunder Chomp enables Hunder to hit water types as well as other metal types. Chilly Chomp is extremely helpful against Earth types as Hunder is 4x weak to them. Finally, Blaze Chomp helps hit dark types, metal types who have an electric immunity and generally any Loomian that doesn’t get hit by the other 3 moves.`,\r\n                        require(\"@/assets/images/setMaking/OffensiveSet2/Moveset.png\"),\r\n                        `Hunder follows the simple “200 200 100” pattern by having 200 Melee Attack, 200 Speed, 52 Energy and 48 Health. `,\r\n                        `200 Melee Attack for maximum damage output, 200 Speed speedties Nimble Dorogo, outspeeds Very Nimble Garlash, 52 Energy gives 5 Vice Jaws and 48 Health acts as leftovers`,\r\n                        require(\"@/assets/images/setMaking/OffensiveSet2/TrainingPoints.png\"),\r\n                        `Hunder is all about powerful damage - and it also appreciates its diverse moveset. That’s why Hunder will be running Power Cuffs. The amount of TPs invested into Energy that was described earlier takes this into account so Hunder can still pull off quite a few moves before needing to regain energy.`,\r\n                    ]},\r\n                    {\r\n                    Name: \"Defensive Set - Example 1\", \r\n                    Description: [\r\n                        `Introduced with Lotusun Beach in Patch 7, Barblast is one of the evolutions for Pwuff. It became an instant favourite given the utility it offered and therefore high viability, especially over its Melee-Attacking Counterpart.`,\r\n                        `Barblast’s defensive nature in the meta is quite obvious when you notice its 96 Health, 102 Melee Defense and 93 Ranged Defence. Though its Energy and Ranged Attack - 83 and 89 respectively - is less than preferred, they’re still usable. Barblast’s speed is at a depressing 37 but this is only expected given the maximisation of bulk. `,\r\n                        require(\"@/assets/images/setMaking/DefensiveSet1/BaseStats.png\"),\r\n                        `Barblast has a respectable 3 weaknesses (being Electric, Earth and Mind) and 5 resistances (Fire, Water, Ice, Metal and Brawler). Melee Attackers such as Kanibo, Vesperatu, Garlash and even Obsidrugon struggle against Barblast given its typing. There are some Loomians that Barblast can act as a hard check against given the scenario however these will be mentioned later on.`,\r\n                        require(\"@/assets/images/setMaking/DefensiveSet1/TypeEffectiveness.png\"),\r\n                        `Additionally, since Barblast is a toxic type, it has the ability to clear poison barbs from your side of the field.`,\r\n                        `Given Barblast excels in Melee Defense and Health, Very Robust Frail Sluggish will be used. This increases Melee Defense by 20% whilst decreasing its Melee Attack and Speed respectively by 10%. Given these two stats are below mediocre, we can afford to decrease them further.`,\r\n                        `Alternatively, we could utilize Clever in order to check Cephalops, Ikazune and many other ranged attackers that Barblast can hit for super effectiveness. However, for this demonstration, we’ll be sticking with Very Robust.`,\r\n                        `To increase the damage output from its 89 Ranged Attack, High Explosive boosts Barblast’s explosive moves (such as Toxiblast and Water Bomb) by 50%. There is a downside to this ability where secondary effects are removed - similar to brute force - but this isn’t a massive downside.`, \r\n                        require(\"@/assets/images/setMaking/DefensiveSet1/HighlyExplosive.png\"),\r\n                        `Toxic Spines, an ability that gives the chance for an attacker to be poisoned when using a contact move on Barblast, can also be used however some may find the odds of this ability not worth it. We’ll go ahead with the Secret Ability. `,\r\n                        `Barblast isn’t short of moves when it comes to its movepool. Since we are using High Explosive, Toxiblast and Water Bomb are the most obvious choices for ATB. Because This is a defensive loomian, recovery is a must. Rejuvenate will be chosen because of the high amount of health it can return. Finally, for the fourth move, various utility moves can be used but - disappointingly - we can’t choose them all. Poison helps cripple and break down Loomians who stand in Barblast’s way while Icicle Traps help exert pressure due to limiting swap-ins. Power Focus allows Barblast to set up allowing it to hit harder and make it less likely to hit weakly. This set will use Power Focus however any of the three are valid`,\r\n                        require(\"@/assets/images/setMaking/DefensiveSet1/Moveset.png\"),\r\n                        `200 Health and 200 Melee Defense naturally seems the way to go with Barblast given how Melee Bulky we want it to be, allowing it to soak up as much damage as possible from previously mentioned melee attackers.`,\r\n                        `Despite a somewhat suboptimal energy stat, we can invest 60 Training Points into Energy to reach 250 Total Points which enables Barblast to use 3 Rejuvenates, 3 Water Bombs and 1 Toxiblast. 250 is a great benchmark energy stats so this strategy can be applied to a plethora of Loomians. `,\r\n                        `As for the remaining 40 TPs, we can insert them into the Ranged Defense stat in order to increase our bulk on the less defensive side; investing into the Ranged Attack stat is also an option.`,\r\n                        require(\"@/assets/images/setMaking/DefensiveSet1/TrainingPoints.png\"),\r\n                        `There’s a few options to our disposal when it comes to what Barblast will be holding. Energy Orb is very helpful to conserve energy and reduce the energy cost of your moves, especially since Barblast will click Rejuvenate, a move with 72 energy cost, quite often. If preserving energy isn’t a worry for you, Heavy Armour helps strengthen Barblast’s Melee Defense. This will hinder your energy stat leading to only 3 Rejuvenates being available at 250 energy so keep this in mind.`,\r\n                        `Relating to the type effectiveness section, Barblast can find itself in tricky matchups while being able to hit the opponent super effectively i.e. Ikazune, Harvesect and Cephalops. In these situations, the respective pearl - which halves the strength of a move of the corresponding type - can enable Barblast to sustain itself and win in a 1v1. Be cautious, since pearls are a one-use item.`,\r\n                    ]},\r\n                    {\r\n                    Name: \"Defensive Set - Example 2\",\r\n                    Description: [\r\n                        `Despite appearing right at the beginning of the game, Gastroak was considered as an absolute failure and was largely forgotten by the community; however, with the introduction of Soul Burst, it shot up in usage due to its elite utility as a defensive Loomian.`,\r\n                        `Terraform-Gastroak’s base stats are a breathtaking upgrade from its normal form. A 140 Health stat, along with a 140 Ranged Defence stat, allows it to sponge many hits. It has a respectable Ranged Attack stat of 105 and an adequate energy stat of 88. On the other hand, Terraform-Gastroak’s Melee side is quite middling with a 60 Melee Attack stat and 45 Melee Defence stat but this is fine, due to Gastroak not needing to rely on them. As for its 65 Speed stat, it's a fair compromise given its monstrous stats. `,\r\n                        require(\"@/assets/images/setMaking/DefensiveSet2/BaseStats.png\"),\r\n                        `Generally, Plant isn’t seen as a good typing due to its interactions but, along with its earth typing gained from Soul Burst, Terraform-Gastorak does boast 2 immunities (light and electric) and an earth resistance. Conversely, Terraform-Gastroak has a 2x weakness to Fire, Dark and Bug and a quad weakness to Ice (Though this will be further touched upon in the Ability section).`,\r\n                        require(\"@/assets/images/setMaking/DefensiveSet2/TypeEffectiveness.png\"),\r\n                        `Given its incredibly bulky nature by having a high Health and Ranged Defense stat, Terraform-Gastroak can use Very Clever Frail Sluggish. Terraform-Gastroak also has the utility to support this type of set. The negative personalities are chosen because they’re low and therefore won’t be used much.`,\r\n                        `Terraform-Gastroak has access to only one ability: Insulated which not only turns its quad weakness to ice into a normal weakness but also makes Fire type attacks neutral. Despite this, it's recommended to run Ungracious Host as a normal Gastroak to deter any health-draining move.`,\r\n                        require(\"@/assets/images/setMaking/DefensiveSet2/Ability.png\"),\r\n                        `Stratagem is a no brainer with a Ranged Defense stat of 140, allowing it to exert offensive pressure whilst remaining defensive. Tamp, which increases its Melee Defence and Ranged Defence, is also helpful in making Gastroak deal more damage with stratagem whilst also improving its Defence stats`,\r\n                        `Poison is also a very potent move for asserting pressure onto the opponent especially if they do try to swap into a resist if they’re expecting you to use Stratagem.`,\r\n                        `Lastly, Photosynthesis is a must-have on Gastroak just like how any other defensive Loomians likes reliable recovery. As a bonus, it has an animation allowing you to animation stall in front of your opponent.`,\r\n                        require(\"@/assets/images/setMaking/DefensiveSet2/Moveset.png\"),\r\n                        `200 Health and 200 Ranged Defence makes Gastroak as tanky as possible allowing it to not only take as many hits as possible but also increase its damage output with Stratagem.`,\r\n                        `20 Energy can be used for 5 Stratagems and 2 Tamps (or Poisons).`,\r\n                        `56 Speed enables it to outspeed Ursoul and 24 Melee Defence ensures a Blaze Chomp from Sedimars is a 4 hit KO - which would hit Gastroak for neutral effectiveness.`,\r\n                        require(\"@/assets/images/setMaking/DefensiveSet2/TrainingPoints.png\"),\r\n                        `Of course, since this is a Soul Burst Loomian, it will be running its respective Burst Crystal: Gastroburst. This can be seen as disadvantageous since any other defensive loomian could hold a heavy shield/armour or mysterious dust however there really isn’t an alternative.`,\r\n                        require(\"@/assets/images/setMaking/DefensiveSet2/Gastroburst.png\"),\r\n                    ]}\r\n                ]\r\n            }\r\n        },\r\n        methods: {\r\n            SwitchTabs(Name) {\r\n                var i, tabcontent\r\n                tabcontent = document.getElementsByClassName(\"description\")\r\n\r\n                // For all the description boxes, make them all invisible\r\n                for (i = 0; i < tabcontent.length; i++) {\r\n                    tabcontent[i].style.display = \"none\";\r\n                }\r\n\r\n                // Now get the element that the user selected and make that visible\r\n                document.getElementById(Name).style.display = \"block\";\r\n            },\r\n            isImagePath(str) {\r\n                return /\\.(jpg|jpeg|png|gif|webp)$/i.test(str);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n    .box {\r\n        margin-top: 20px;\r\n        background-color: #0057b4;\r\n        border-radius: 25px;\r\n        min-width: 280px;\r\n    }\r\n\r\n    .selection {\r\n        padding: 10px;\r\n        background-color: azure;\r\n        border-radius: 25px 25px 0px 0px;\r\n    }\r\n\r\n    .selection button {\r\n        margin: 5px 10px;\r\n    }\r\n\r\n    .description {\r\n        display: none;\r\n        padding: 5px 2%;\r\n    }\r\n\r\n    .image {\r\n        display: grid;\r\n        margin: auto;\r\n        max-width: 800px;\r\n        width: 60%;\r\n        min-width: 260px;\r\n        border-radius: 10px;\r\n    }\r\n</style>","import { render } from \"./SetExamples.vue?vue&type=template&id=8eb7644a&scoped=true\"\nimport script from \"./SetExamples.vue?vue&type=script&lang=js\"\nexport * from \"./SetExamples.vue?vue&type=script&lang=js\"\n\nimport \"./SetExamples.vue?vue&type=style&index=0&id=8eb7644a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8eb7644a\"]])\n\nexport default __exports__","import { render } from \"./AppSetMaking.vue?vue&type=template&id=e2381280\"\nimport script from \"./AppSetMaking.vue?vue&type=script&lang=js\"\nexport * from \"./AppSetMaking.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./SetMakingPage.vue?vue&type=template&id=759a70f1\"\nimport script from \"./SetMakingPage.vue?vue&type=script&lang=js\"\nexport * from \"./SetMakingPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["type","togglecontentList","id","class","showcontentList","content","item","index","key","href","title","subitems","length","subitem","subIndex","name","data","props","Array","methods","this","__exports__","render","imageUrl","pageName","contentData","Items","Rally","Index","SwitchTabs","Name","style","Description","Text","isImagePath","src","i","tabcontent","document","getElementsByClassName","display","getElementById","str","test","components","ImageHeader","SideBar","ContentList","SetExamples","AppSetMaking"],"sourceRoot":""}